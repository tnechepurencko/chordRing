syntax = "proto3";

service Registry {
    rpc register(RegisterRequest) returns (RegisterReply);
    rpc deregister(DeregisterRequest) returns (DeregisterReply);
    rpc populate_finger_table(PFTRequest) returns (PFTReply);
    rpc get_chord_info(Empty) returns (GCIReply);
    rpc who_am_i(Empty) returns (WAIResponse);
}

service Node {
    rpc get_finger_table(Empty) returns (GFTReply);
    rpc save(SaveRequest) returns (SaveReply);
    rpc remove(RemoveRequest) returns (RemoveReply);
    rpc find(FindRequest) returns (FindReply);
    rpc who_am_i(Empty) returns (WAIResponse);
    rpc get_saved_keys(GSKRequest) returns (GCIReply);
}

message GSKRequest {
    int32 id = 1;
}

message GSKReply {
    bool keysExist = 1;
    repeated KeyValue kv = 2;
}

message KeyValue {
    string key = 1;
    string value = 2;
}

message FindReply {
    bool stat = 1;
    optional int32 id = 2;
    optional string addr = 3;
    optional string error = 4;
}

message FindRequest {
    string key = 1;
}

message RemoveReply {
    bool stat = 1;
    optional int32 id = 2;
    optional string error = 3;
}

message RemoveRequest {
    string key = 1;
}

message SaveRequest {
    string key = 1;
    string text = 2;
}

message SaveReply {
    bool stat = 1;
    optional int32 id = 2;
    optional string error = 3;
}

message FT {
    int32 id = 1;
    string addr = 2;
}

message GFTReply {
    repeated FT ft = 1;
}

message WAIResponse{
    string reply = 1;
    optional int32 id = 2;
}

message Empty {}

message CI {
    int32 id = 1;
    string addr = 2;
}

message GCIReply {
    repeated CI ci = 1;
}

message PFTRequest {
    int32 id = 1;
}

message PFTReply {
    int32 predID = 1;
    repeated FT ft = 2;
}

message RegisterRequest {
    string ipaddr = 1;
    string port = 2;
}

message RegisterReply {
    int32 id = 1;
    optional int32 m = 2;
    optional string error = 3;
}

message DeregisterRequest {
    int32 id = 1;
}

message DeregisterReply {
    bool stat = 1;
    string msg = 2;
}



